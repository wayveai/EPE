e--
weight_dir: /home/kacper/data/EPE/weights # path to folder where checkpoints should be stored

common:
  unpin: false # disable pinning for the loader
  batch_size: 1
  num_loaders: 8
  log_interval: 50 # print losses evey X iterations
  seed: 1

train:
  max_epochs: -1
  max_iterations: 1000000
  save_epochs: -1 # save every X epochs
  save_iterations: 10000 # save every X iterations
  name_save: sim2real_og_debug
  shuffle_train: true
  val_interval: 1000 # run inference on validation set every X iterations
  no_validation: True

test:
  shuffle_test: false

real_dataset:
  name: real
  filelist: /home/kacper/data/EPE/real/real_files.csv # file with run_id and timestamp pairs
  data_root: '/home/kacper/data/datasets'

fake_dataset:
  name: sim

  g_buffers: depth

  train_filelist: /home/kacper/data/EPE/sim/sim_files_train.csv # file with run_id and timestamp pairs
  val_filelist: /home/kacper/data/EPE/sim/sim_files_val.csv # see above
  test_filelist: /home/kacper/data/EPE/sim/sim_files_test.csv # see above

  data_root: '/home/kacper/data/datasets'

  sampling: 
    type: 'matching'
    matched_crop_path: /home/kacper/data/EPE/matched_crops_sim-real.csv # generated by matching/filter.py
    crop_weight_path: /home/kacper/data/EPE/crop_weights_sim-real.npz # generated by matching/compute_weights.py

generator:
  type: hr
  config:
    encoder_type: ENCODER
    stem_norm: group
    num_stages: 4
    other_norm: group
    gbuffer_norm: RAD
    gbuffer_encoder_norm: residual
    num_gbuffer_layers: 3
  optimizer:
    type: adam
    learning_rate: 0.0001
    adam_beta: 0.9
    adam_beta2: 0.999
    clip_gradient_norm: 1000
    # clip_weights: 1000
  scheduler:
    type: 'step'
    step: 100000
    gamma: 0.5
    
discriminator:
  type: ppde
  run_always: false
  config:
    norm: group
    num_layers: 4
    max_dim: 256
  optimizer:
    type: adam
    learning_rate: 0.0001 
    adam_beta: 0.9
    adam_beta2: 0.999
    clip_gradient_norm: 1000
    # clip_weights: 1000
  scheduler:
    type: 'step'
    step: 1000000
    gamma: 0.5
    
objectives:
  gan: ls
  perceptual:
    type: 'lpips_vgg'
    weight: 5
  reg:
    weight: 0.03
...
